@await Html.PartialAsync("_ContactoToastAndDeleteScripts")
@model ContactHUB.ViewModels.ContactosPaginadosViewModel
@{
    ViewData["Title"] = "Mis Contactos";
    ViewBag.Title = "Contactos";
    var departamentos = ViewBag.Departamentos as List<ContactHUB.Models.Departamento>;
    var etiquetas = ViewBag.Etiquetas as List<ContactHUB.Models.Etiqueta>;
    var search = ViewBag.Search as string;
    int? departamentoId = ViewBag.DepartamentoId;
    int? etiquetaId = ViewBag.EtiquetaId;
    var totalContactos = ViewBag.TotalContactos as int? ?? 0;
    var totalActivos = ViewBag.TotalActivos as int? ?? 0;
    var agregadosHoy = ViewBag.AgregadosHoy as int? ?? 0;
    var eliminadosHoy = ViewBag.EliminadosHoy as int? ?? 0;
}
@{
    var statsModel = new {
        totalContactos = totalContactos,
        totalActivos = totalActivos,
        agregadosHoy = agregadosHoy,
        eliminadosHoy = eliminadosHoy
    };
}
@await Html.PartialAsync("_ContactosStatsPartial", statsModel)

@{
    var filterModel = new {
        search = search,
        departamentos = departamentos,
        departamentoId = departamentoId,
        etiquetas = etiquetas,
        etiquetaId = etiquetaId,
        orden = ViewBag.Orden as string
    };
}
@await Html.PartialAsync("_ContactosFilterPartial", filterModel)

<div class="d-flex justify-content-between align-items-center mb-3">
    <h2>Contactos</h2>
    <div class="d-flex gap-2">
        <a class="btn btn-success" href="@Url.Action("ExportExcel", new { search = ViewBag.Search, departamentoId = ViewBag.DepartamentoId, etiquetaId = ViewBag.EtiquetaId, orden = ViewBag.Orden })">
            <i class="bi bi-file-earmark-excel"></i> Exportar Excel
        </a>
        <a class="btn btn-info text-white" href="@Url.Action("ExportJson", new { search = ViewBag.Search, departamentoId = ViewBag.DepartamentoId, etiquetaId = ViewBag.EtiquetaId, orden = ViewBag.Orden })">
            <i class="bi bi-file-earmark-code"></i> Exportar JSON
        </a>
        <button class="btn btn-primary" onclick="openContactoModal('@Url.Action("Create", "Contactos")', 'Agregar Contacto')">
            <i class="bi bi-person-plus"></i> Agregar Contacto
        </button>
    </div>
</div>

@if (!Model.Contactos.Any())
{
    <div class="alert alert-info">No tienes contactos guardados.</div>
}
else
{
    @await Html.PartialAsync("_ContactosCardsPartial", Model.Contactos)
    <!-- PaginaciÃ³n -->
    <nav>
        <ul class="pagination justify-content-center mt-4">
            @for (int i = 1; i <= Model.TotalPaginas; i++)
            {
                <li class="page-item @(i == Model.PaginaActual ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { search = search, departamentoId = departamentoId, etiquetaId = etiquetaId, orden = ViewBag.Orden, page = i })">@i</a>
                </li>
            }
        </ul>
    </nav>
}


@await Html.PartialAsync("_ContactoModalScripts")
