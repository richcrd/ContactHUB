// <auto-generated />
using System;
using ContactHUB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactHUB.Migrations
{
    [DbContext(typeof(ContactDbContext))]
    [Migration("20250801052937_AddAccionUsuario")]
    partial class AddAccionUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContactHUB.Models.AccionUsuario", b =>
                {
                    b.Property<int>("IdAccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAccion"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("IP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("TipoAccion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAccion");

                    b.ToTable("AccionUsuarios");
                });

            modelBuilder.Entity("ContactHUB.Models.Contacto", b =>
                {
                    b.Property<int>("IdContacto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdContacto"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id_Departamento")
                        .HasColumnType("int");

                    b.Property<int?>("Id_Estado")
                        .HasColumnType("int");

                    b.Property<int>("Id_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdContacto");

                    b.HasIndex("Id_Departamento");

                    b.HasIndex("Id_Estado");

                    b.HasIndex("Id_Usuario");

                    b.ToTable("Contacto");
                });

            modelBuilder.Entity("ContactHUB.Models.ContactoEtiqueta", b =>
                {
                    b.Property<int>("IdContacto")
                        .HasColumnType("int");

                    b.Property<int>("IdEtiqueta")
                        .HasColumnType("int");

                    b.HasKey("IdContacto", "IdEtiqueta");

                    b.HasIndex("IdEtiqueta");

                    b.ToTable("ContactoEtiqueta");
                });

            modelBuilder.Entity("ContactHUB.Models.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartamento"));

                    b.Property<int>("Id_Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDepartamento");

                    b.HasIndex("Id_Estado");

                    b.ToTable("Departamento");
                });

            modelBuilder.Entity("ContactHUB.Models.Estado", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstado");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("ContactHUB.Models.Etiqueta", b =>
                {
                    b.Property<int>("IdEtiqueta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEtiqueta"));

                    b.Property<int>("Id_Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEtiqueta");

                    b.HasIndex("Id_Estado");

                    b.ToTable("Etiqueta");
                });

            modelBuilder.Entity("ContactHUB.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Estado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Usuario");

                    b.HasKey("IdUsuario");

                    b.HasIndex("Id_Estado");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ContactHUB.Models.Contacto", b =>
                {
                    b.HasOne("ContactHUB.Models.Departamento", "Departamento")
                        .WithMany("Contactos")
                        .HasForeignKey("Id_Departamento");

                    b.HasOne("ContactHUB.Models.Estado", "Estado")
                        .WithMany("Contactos")
                        .HasForeignKey("Id_Estado");

                    b.HasOne("ContactHUB.Models.Usuario", "Usuario")
                        .WithMany("Contactos")
                        .HasForeignKey("Id_Usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Estado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ContactHUB.Models.ContactoEtiqueta", b =>
                {
                    b.HasOne("ContactHUB.Models.Contacto", "Contacto")
                        .WithMany("ContactoEtiquetas")
                        .HasForeignKey("IdContacto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ContactHUB.Models.Etiqueta", "Etiqueta")
                        .WithMany("ContactoEtiquetas")
                        .HasForeignKey("IdEtiqueta")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contacto");

                    b.Navigation("Etiqueta");
                });

            modelBuilder.Entity("ContactHUB.Models.Departamento", b =>
                {
                    b.HasOne("ContactHUB.Models.Estado", "Estado")
                        .WithMany("Departamentos")
                        .HasForeignKey("Id_Estado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ContactHUB.Models.Etiqueta", b =>
                {
                    b.HasOne("ContactHUB.Models.Estado", "Estado")
                        .WithMany("Etiquetas")
                        .HasForeignKey("Id_Estado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ContactHUB.Models.Usuario", b =>
                {
                    b.HasOne("ContactHUB.Models.Estado", "Estado")
                        .WithMany("Usuarios")
                        .HasForeignKey("Id_Estado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("ContactHUB.Models.Contacto", b =>
                {
                    b.Navigation("ContactoEtiquetas");
                });

            modelBuilder.Entity("ContactHUB.Models.Departamento", b =>
                {
                    b.Navigation("Contactos");
                });

            modelBuilder.Entity("ContactHUB.Models.Estado", b =>
                {
                    b.Navigation("Contactos");

                    b.Navigation("Departamentos");

                    b.Navigation("Etiquetas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ContactHUB.Models.Etiqueta", b =>
                {
                    b.Navigation("ContactoEtiquetas");
                });

            modelBuilder.Entity("ContactHUB.Models.Usuario", b =>
                {
                    b.Navigation("Contactos");
                });
#pragma warning restore 612, 618
        }
    }
}
